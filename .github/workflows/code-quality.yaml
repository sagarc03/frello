name: Code Quality

on:
  pull_request:
    types: [opened, reopened, closed]
  push:

env:
  ROOT_FOLDERS: "config custom_auth frello manage.py"
  DJANGO_SETTINGS_MODULE: "config.settings.dev"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Install Python dependencies
        run: poetry install --no-interaction

      - name: pylint
        run: poetry run pylint ${{ env.ROOT_FOLDERS }}

      - name: mypy
        run: poetry run mypy ${{ env.ROOT_FOLDERS }}

      - name: black
        run: poetry run black --check ${{ env.ROOT_FOLDERS }}

      - name: isort
        run: |
          poetry run isort ${{ env.ROOT_FOLDERS }} -c --diff
          echo "isort check ok"

      - name: djhtml
        run: poetry run djhtml templates/* -t 2 --check
